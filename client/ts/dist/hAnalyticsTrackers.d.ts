declare enum AppScreen {
    OFFER = "offer",
    CLAIMS_STATUS_DETAIL = "claims_status_detail",
    CLAIM_HONOR_PLEDGE = "claim_honor_pledge",
    COMMON_CLAIM_DETAIL = "common_claim_detail",
    EMBARK = "embark",
    EMBARK_TOOLTIP = "embark_tooltip",
    MARKET_PICKER = "market_picker",
    MARKETING = "marketing",
    DATA_COLLECTION_AUTHENTICATING = "data_collection_authenticating",
    DATA_COLLECTION_CREDENTIALS = "data_collection_credentials",
    DATA_COLLECTION_FAIL = "data_collection_fail",
    DATA_COLLECTION_INTRO = "data_collection_intro",
    DATA_COLLECTION_SUCCESS = "data_collection_success",
    CONNECT_PAYMENT_ADYEN = "connect_payment_adyen",
    CONNECT_PAYMENT_TRUSTLY = "connect_payment_trustly",
    CONNECT_PAYMENT_FAILED = "connect_payment_failed",
    CONNECT_PAYMENT_SUCCESS = "connect_payment_success",
    PAYMENTS = "payments",
    CHARITY = "charity",
    CONTACT_INFO = "contact_info",
    CROSS_SELL_DETAIL = "cross_sell_detail",
    FOREVER = "forever",
    HOME = "home",
    INSURANCE_DETAIL = "insurance_Detail",
    INSURANCES = "insurances",
    MOVING_FLOW_INTRO = "moving_flow_intro",
    PROFILE = "profile",
    APP_INFORMATION = "app_information",
    APP_SETTINGS = "app_settings",
    CHAT = "chat"
}
export declare class hAnalyticsTrackers {
    static identify(): void;
    static screenView(screen: AppScreen): () => void;
    static chatRichMessageSent(): () => void;
    static chatTextMessageSent(): () => void;
    static claimCardClick(claimId: string, claimStatus: string): () => void;
    static claimCardVisible(claimId: string, claimStatus: string): () => void;
    static claimDetailClickOpenChat(claimId: string, claimStatus: string): () => void;
    static claimsDetailRecordingPlayed(claimId: string): () => void;
    static deepLinkOpened(type: string): () => void;
    static screenViewCharity(): () => void;
    static screenViewContactInfo(): () => void;
    static screenViewCrossSellDetail(typeOfContract: string): () => void;
    static screenViewForever(): () => void;
    static screenViewHome(): () => void;
    static screenViewInsuranceDetail(contractId: string): () => void;
    static screenViewInsurances(): () => void;
    static screenViewMarketPicker(): () => void;
    static screenViewMovingFlowIntro(): () => void;
    static screenViewOffer(offerIds: string[]): () => void;
    static screenViewProfile(): () => void;
    static screenViewAppInformation(): () => void;
    static screenViewAppSettings(): () => void;
    static screenViewChat(): () => void;
    static screenViewClaimHonorPledge(): () => void;
    static screenViewClaimsStatusDetail(claimId: string, claimStatus: string): () => void;
    static screenViewCommonClaimDetail(id: string): () => void;
    static screenViewConnectPaymentAdyen(): () => void;
    static screenViewConnectPaymentFailed(): () => void;
    static screenViewConnectPaymentSuccess(): () => void;
    static screenViewConnectPaymentTrustly(): () => void;
    static screenViewDataCollectionAuthenticating(providerId: string): () => void;
    static screenViewDataCollectionCredentials(providerId: string): () => void;
    static screenViewDataCollectionFail(providerId: string): () => void;
    static screenViewDataCollectionIntro(providerId: string): () => void;
    static screenViewDataCollectionSuccess(providerId: string): () => void;
    static screenViewEmbark(storyName: string): () => void;
    static screenViewEmbarkTooltip(): () => void;
    static screenViewMarketing(): () => void;
    static screenViewPayments(): () => void;
    static embarkExternalRedirect(location: string): () => void;
    static embarkPassageGoBack(storyName: string, passageName: string): () => void;
    static embarkTrack(storyName: string, eventName: string, store: {
        [name: string]: string | null;
    }): () => void;
    static embarkVariantedOfferRedirect(allIds: string[], selectedIds: string[]): () => void;
    static experimentEvaluated(name: string, variant: string): () => void;
    static experimentsLoaded(experiments: string[]): () => void;
    static loggedIn(): () => void;
    static loggedOut(): () => void;
    static notificationOpened(type: string): () => void;
    static notificationPermission(granted: boolean | null): () => void;
    static buttonClickMarketingLogin(): () => void;
    static buttonClickMarketingOnboard(): () => void;
    static onboardingChooseEmbarkFlow(embarkStoryId: string): () => void;
    static dataCollectionSkipped(providerId: string): () => void;
    static marketSelected(locale: string): () => void;
    static homePaymentCardVisible(): () => void;
    static quotesSigned(quoteIds: string[]): () => void;
    static received_quotes(quoteIds: string[]): () => void;
    static appBackground(): () => void;
    static appResumed(): () => void;
    static appShutdown(): () => void;
    static appStarted(): () => void;
}
export {};
